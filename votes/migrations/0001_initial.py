# Generated by Django 3.1.2 on 2020-10-30 13:36

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('picture_self', models.ImageField(blank=True, null=True, upload_to='')),
                ('party', models.CharField(choices=[('ACDP', 'African Christian Democratic Party'), ('AIC', 'African Independent Congress'), ('ATM', 'African Transformation Movement'), ('ALJAMAH', 'Al Jama-ah'), ('ANC', 'African National Congress'), ('COPE', 'Congress of the People'), ('DA', 'Democratic Alliance'), ('EFF', 'Economic Freedom Fighters'), ('FF+', 'Freedom Front Plus'), ('GOOD', 'Good'), ('IFP', 'Inkatha Freedom Party'), ('NFP', 'National Freedom Party'), ('PAC', 'Pan Africanist Congress'), ('UDM', 'United Democratic Movement'), ('Other', 'Other')], default='Other', max_length=7)),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Other', 'Other')], max_length=10, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=100)),
                ('votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('tier', models.CharField(choices=[('Local', 'Local'), ('Regional', 'Regional'), ('National', 'National'), ('Other', 'Other')], max_length=10, null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('candidates', models.ManyToManyField(blank=True, to='votes.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('id_number', models.CharField(blank=True, max_length=16, unique=True)),
                ('constituency', models.CharField(blank=True, max_length=100)),
                ('party', models.CharField(choices=[('ACDP', 'African Christian Democratic Party'), ('AIC', 'African Independent Congress'), ('ATM', 'African Transformation Movement'), ('ALJAMAH', 'Al Jama-ah'), ('ANC', 'African National Congress'), ('COPE', 'Congress of the People'), ('DA', 'Democratic Alliance'), ('EFF', 'Economic Freedom Fighters'), ('FF+', 'Freedom Front Plus'), ('GOOD', 'Good'), ('IFP', 'Inkatha Freedom Party'), ('NFP', 'National Freedom Party'), ('PAC', 'Pan Africanist Congress'), ('UDM', 'United Democratic Movement'), ('Other', 'Other')], default='Other', max_length=7)),
                ('phone', models.CharField(blank=True, max_length=200)),
                ('picture_id', models.ImageField(blank=True, null=True, upload_to='')),
                ('picture_self', models.ImageField(blank=True, null=True, upload_to='')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Other', 'Other')], max_length=10, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=100)),
                ('is_official', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
